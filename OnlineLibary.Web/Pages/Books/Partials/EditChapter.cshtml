@page
@using OnlineLibary.Domain.Enums
@using OnlineLibary.Managers.Enums
@using OnlineLibary.Web.Helpers
@model OnlineLibary.Web.Pages.Books.Partials.EditChapterModel
@{
    var isEditor = User.HasAnyRole(UserRoleType.Editor);
    ViewData["Title"] = (Model.Input.Id.HasValue ? "Edit" : "Add") + " chapter";
}

@if (Model.WriteStatusMessage)
{
    <partial name="@PagesList.Shared_StatusMessage" model="Model.ResponseResult"></partial>
}

<form method="post" id="edit-book" enctype="multipart/form-data">
    <input asp-for="Input.Id" type="hidden" />
    <input asp-for="Input.BookId" type="hidden" />
    <div class="row">
        <div class="col-12 col-md-6 text-center">
            @if (!string.IsNullOrEmpty(Model.Input.ImageUrl))
            {
                <img class="mb-3 h-350px img-fluid object-fit-cover rounded mx-auto " src="@Url.Content(Model.Input.ImageUrl)" />
            }
            <div>
                <input type="file" asp-for="Input.NewImage" />
                <span asp-validation-for="Input.NewImage" class="text-danger"></span>
            </div>
        </div>
        <div class="col-12 col-md-6">
            <div class="form-floating my-2">
                <input asp-for="Input.Title" class="form-control" />
                <label asp-for="Input.Title"></label>
                <span asp-validation-for="Input.Title" class="text-danger"></span>
            </div>
            <div class="form-floating my-2">
                <input asp-for="Input.Number" class="form-control" />
                <label asp-for="Input.Number"></label>
                <span asp-validation-for="Input.Number" class="text-danger"></span>
            </div>
            @if (Model.Input.Id.HasValue)
            {
                <a href="@Url.Page(PagesList.BooksDetails, new { id = Model.Input.BookId })" class="btn btn-primary">View book</a>
                <a href="@Url.Page(PagesList.BooksChapter, new { bookId = Model.Input.BookId, id = Model.Input.Id })" class="btn btn-primary">View chapter</a>
                <a href="@Url.Page(PagesList.BooksEditChapter, new { bookId = Model.Input.BookId})" class="btn btn-dark">
                    Add new chapter
                </a>
                <a class="btn btn-danger" href="@Url.Page(PagesList.BooksChapter, "Delete", new { bookId = Model.Input.BookId, id =  Model.Input.Id})">Delete</a>
            }
            <button type="submit" class="btn btn-success my-3">Save Changes</button>
        </div>
    </div>
    <div class="form-floating my-3">
        <div class="mb-3">
            <label class="mb-2" asp-for="Input.Content"></label>
            <textarea asp-for="Input.Content" class="form-control" type="text" rows="50"></textarea>
            <span asp-validation-for="Input.Content"></span>

        </div>
    </div>
    <button type="submit" class="btn btn-success my-3">Save Changes</button>
</form>

<div class="d-flex justify-content-evenly">
    @if (Model.Input.PreviousId.HasValue)
    {
        <a href="@Url.Page(PagesList.BooksChapter, new { bookId = Model.Input.BookId, id = Model.Input.PreviousId})" class="btn btn-outline-dark"> @("< ") Previous</a>
    }
    @if (Model.Input.NextId.HasValue)
    {
        <a href="@Url.Page(PagesList.BooksChapter, new { bookId = Model.Input.BookId, id = Model.Input.NextId})" class="btn btn-outline-dark">Next @(" >")</a>
    }
</div>
