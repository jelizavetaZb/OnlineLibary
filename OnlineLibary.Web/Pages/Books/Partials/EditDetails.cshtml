@page
@using OnlineLibary.Domain.Enums
@using OnlineLibary.Web.Helpers
@model OnlineLibary.Web.Pages.Books.Partials.EditDetailsModel
@{
    var isEditor = User.HasAnyRole(UserRoleType.Editor);
    ViewData["Title"] = (isEditor ? ((Model.Input.Id.HasValue ? "Edit" : "Add")) : "View") + " book";
}
@if (Model.WriteStatusMessage)
{
    <partial name="@PagesList.Shared_StatusMessage" model="Model.ResponseResult"></partial>
}

<form method="post" id="edit-book" enctype="multipart/form-data">
    <input asp-for="Input.Id" type="hidden" />
    <div class="row">
        <div class="col-12 col-md-3 text-center">
            <img class="mb-3 h-350px img-fluid object-fit-cover rounded mx-auto " src="@(string.IsNullOrEmpty(Model.Input.CoverUrl) ? Url.Content("/img/default-cover.jpg")
                : Url.Content(Model.Input.CoverUrl))" />
            <div>
                <input type="file" asp-for="Input.NewCover" />
                <span asp-validation-for="Input.NewCover" class="text-danger"></span>
            </div>
        </div>
        <div class="col-12 col-md-9">
            <div class="form-floating my-2">
                <input asp-for="Input.Title" class="form-control" />
                <label asp-for="Input.Title"></label>
                <span asp-validation-for="Input.Title" class="text-danger"></span>
            </div>
            <div class="form-floating my-2">
                <input asp-for="Input.Author" class="form-control" />
                <label asp-for="Input.Author"></label>
                <span asp-validation-for="Input.Author" class="text-danger"></span>
            </div>
            <div class="form-floating my-2">
                <input asp-for="Input.Year" class="form-control" />
                <label asp-for="Input.Year"></label>
                <span asp-validation-for="Input.Year" class="text-danger"></span>
            </div>
            @if (Model.Input.Id.HasValue)
            {
                <a href="@Url.Page(PagesList.BooksEditChapter, new { bookId = Model.Input.Id})" class="btn btn-dark">
                    Add new chapter
                </a>
                <a class="btn btn-primary" href="@Url.Page(PagesList.BooksDetails, new { id = Model.Input.Id})">View book</a>
                <a class="btn btn-danger" href="@Url.Page(PagesList.BooksList, "Delete", new { id = Model.Input.Id})">Delete</a>
            }
            <button type="submit" class="btn btn-success my-3">Save Changes</button>
        </div>
    </div>
    <div class="form-floating my-3">
        <div class="mb-3">
            <div>
                <span asp-validation-for="Input.Description" class="text-danger"></span>
            </div>
            <label class="mb-2" asp-for="Input.Description"></label>
            <textarea asp-for="Input.Description" class="form-control" type="text" rows="10"></textarea>
        </div>
    </div>
</form>

<div class="card">
    <ul class="list-group list-group-flush">
        @foreach (var item in Model.Chapters)
        {
            <li class="list-group-item">
                <div>
                    <a href="@Url.Page(PagesList.BooksChapter, new {bookId = Model.Input.Id, id = item.Id})" class="stretched-link text-decoration-none">Chapter @item.Number: @item.Title</a>
                </div>
            </li>
        }
    </ul>
</div>


